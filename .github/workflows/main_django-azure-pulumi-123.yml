# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - django-azure-pulumi-123

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      # # Seleciona o stack do Pulumi ou cria um se ainda não existir
      # - name: Select Pulumi Stack
      #   run: pulumi stack select wartrax13/pulumi-django/tentativa-django
      #   env:
      #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      # # Configura a localização para "Brazil South" após selecionar o stack
      # - name: Configure Pulumi Location
      #   run: pulumi config set azure-native:location "Brazil South"
      #   env:
      #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      # # Executa o Pulumi para deploy da infraestrutura
      # - name: Deploy Infra using Pulumi
      #   run: pulumi up --yes
      #   env:
      #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      #     AZURE_CLIENT_ID: ${{ secrets.AZUREAPPSERVICE_CLIENTID_038C38D18ED74BC080A840BBEA3B7509 }}
      #     AZURE_TENANT_ID: ${{ secrets.AZUREAPPSERVICE_TENANTID_70489CB004BF47E1875110B180CE5165 }}
      #     AZURE_SUBSCRIPTION_ID: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D36E8BA97AE143DB8C0A714ACD529D2C }}

      # Captura o nome do Resource Group e do App Service criado pelo Pulumi
      # - name: Get App Service and Resource Group Names
      #   id: get_names
      #   run: |
      #     echo "RG_NAME=$(pulumi stack output resource_group_name)" >> $GITHUB_ENV
      #     echo "APP_NAME=$(pulumi stack output app_service_name)" >> $GITHUB_ENV
      #   env:
      #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_038C38D18ED74BC080A840BBEA3B7509 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_70489CB004BF47E1875110B180CE5165 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_D36E8BA97AE143DB8C0A714ACD529D2C }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'django-azure-pulumi-123'
          slot-name: 'Production'
